{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js","webpack:///./src/pages/markdown/godel/index.js"],"names":["styles","rootContainer","display","flexDirection","justifyContent","fontSize","textTransform","letterSpacing","color","paddingTop","Footer","render","style","href","target","Component","Layout","children","this","props","importedStyle","defaultStyle","marginLeft","marginRight","maxWidth","rhythm","padding","finalStyle","Header","Navbar","React","MathIndex","siteTitle","get","siteDescription","posts","location","title","htmlAttributes","lang","meta","name","content","map","node","frontmatter","path","key","marginBottom","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","query"],"mappings":"mMAEA,IAAMA,EAAS,CACbC,cAAe,CACbC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,SAAU,GACVC,cAAe,YACfC,cAAe,EACfC,MAAO,OACPC,WAAY,KAiBDC,EAbf,Y,UAAA,G,EAAA,G,qVAAA,yEACEC,OAAA,WACE,OACE,yBAAKC,MAAOZ,EAAOC,eAAnB,cAEE,uBAAGY,KAAK,uBAAuBC,OAAO,UAAtC,cALR,GAA4BC,a,ICRtBC,E,4bACJL,OAAA,WAAU,IACAM,EAAaC,KAAKC,MAAlBF,SACFG,EAAgBF,KAAKC,MAAMP,MAC3BS,EAAe,CACnBC,WAAY,OACZC,YAAa,OACbC,SAAUC,YAAO,IACjBC,QAAYD,YAAO,KAAZ,IAAoBA,YAAO,EAAI,IAGlCE,EAAU,iBACXN,EADW,GAEXD,GAEL,OACE,yBAAKR,MAAOe,GACV,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,6BACCZ,EACD,kBAAC,EAAD,Q,GArBaa,IAAMf,WA2BZC,O,oOCxBTe,E,4bACJpB,OAAA,WACE,IAAMqB,EAAYC,IAAIf,KAAM,sCACtBgB,EAAkBD,IACtBf,KACA,4CAEIiB,EAAQF,IAAIf,KAAM,sCAExB,OACE,kBAAC,IAAD,CAAQkB,SAAUlB,KAAKC,MAAMiB,SAAUC,MAAOL,GAC5C,kBAAC,IAAD,CACEM,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASR,IACvCG,MAAK,eAAiBL,IAExB,oCACCG,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQJ,IAAIW,EAAM,sBAAwBA,EAAKC,YAAYC,KACjE,OACE,yBAAKC,IAAKH,EAAKC,YAAYC,MACzB,wBACElC,MAAO,CACLoC,aAAcvB,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMb,MAAO,CAAEqC,UAAW,QAAUC,GAAIN,EAAKC,YAAYC,MACtDT,IAGL,+BAAQO,EAAKC,YAAYM,MACzB,uBAAGC,wBAAyB,CAAEC,OAAQT,EAAKU,iB,GA/BjCxB,IAAMf,WAwCfgB,YAER,IAAMwB,EAAK,c","file":"component---src-pages-markdown-godel-index-js-e724cea6dfa4d032e45e.js","sourcesContent":["import React, { Component } from 'react'\n\nconst styles = {\n  rootContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    fontSize: 10,\n    textTransform: 'uppercase',\n    letterSpacing: 2,\n    color: 'gray',\n    paddingTop: 15,\n  },\n}\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <div style={styles.rootContainer}>\n        Built with&nbsp;\n        <a href=\"https://gatsbyjs.org\" target=\"_blank\">\n          GatsbyJS\n        </a>\n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react'\n\nimport { rhythm } from '../utils/typography'\nimport Header from '../components/Header'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props\n    const importedStyle = this.props.style\n    const defaultStyle = {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: rhythm(32),\n      padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n    }\n\n    const finalStyle = {\n      ...defaultStyle,\n      ...importedStyle,\n    }\n    return (\n      <div style={finalStyle}>\n        <Header />\n        <Navbar />\n        <br />\n        {children}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport \"katex/dist/katex.min.css\"\n\nimport Layout from '../../../components/Layout.js'\nimport { rhythm } from '../../../utils/typography'\n\nclass MathIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`Math Notes| ${siteTitle}`}\n        />\n        <h2>Math</h2>\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.frontmatter.path\n          return (\n            <div key={node.frontmatter.path}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.frontmatter.path}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default MathIndex\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { type: { eq: \"godel\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            path\n            type\n          }\n        }\n      }\n    }\n  }\n  ` \n"],"sourceRoot":""}